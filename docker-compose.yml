version: "3"

services:
  # Storage backend for fiware-orion
  mongo-db:
    image: mongo:4.4
    hostname: mongo
    labels:
      de.matthes.ndn_app: "mongo"
    command: --nojournal

  # Context broker, which holds the latest sensor values only
  orion:
    image: fiware/orion:3.11.0
    hostname: orion
    depends_on:
      - mongo-db
    networks:
      - default
    ports:
      - "1026:1026"
    labels:
      de.matthes.ndn_app: "fiware-orion"
    command: -dbhost mongo-db -logLevel DEBUG

  # Storage backend for quantumleap
  crate:
    image: crate:4.2.7
    hostname: crate-db
    ports:
      - "4200:4200"
      - "4300:4300"
    environment:
      - CRATE_HEAP_SIZE=2g
    labels:
      de.matthes.ndn_app: "crate"
    command:
      - crate
      - -Cauth.host_based.enabled=false
      - -Ccluster.name=ndn-sensor-cluster
      - -Chttp.cors.enabled=true
      - -Chttp.cors.allow-origin="*"

  # Stores historical data from fiware-orion
  quantumleap:
    image: orchestracities/quantumleap:1.0.0
    hostname: quantumleap
    depends_on:
      - orion
      - crate
    ports:
      - "8668:8668"
    environment:
      - CRATE_HOST=crate
    labels:
      de.matthes.ndn_app: "quantumleap"

  # Visualize the historical data
  grafana:
    image: grafana/grafana:10.2.4
    depends_on:
      - crate
    ports:
      - "3003:3000"
    environment:
      - GF_INSTALL_PLUGINS=orchestracities-map-panel,grafana-clock-panel,grafana-worldmap-panel
    volumes:
      - "grafana-storage:/var/lib/grafana"
    labels:
      de.matthes.ndn_app: "grafana"

  # NFD service
  nfd:
    image: derteufelqwe/ndn-nfd:latest
    hostname: nfd
    ports:
      - "6363:6363/tcp"
      - "6363:6363/udp"
    labels:
      de.matthes.ndn_app: "nfd"

  # Converts the NDN messages to fiware-orion messages
  ndn-adapter:
    image: ghcr.io/ndnappbachelorthesis/ndn-fiware-adapter:latest
    depends_on:
      - nfd
      - quantumleap
      - orion
    environment:
      - FIWARE_HOST=orion
      - LOG_LEVEL=INFO
      - NDN_HOST=nfd
    labels:
      de.matthes.ndn_app: "ndn-adapter"

  # Responds to link quality requests
  ndn-link-quality-handler:
    image: ghcr.io/ndnappbachelorthesis/ndn-link-quality-handler:latest
    depends_on:
      - nfd
    environment:
      - NDN_HOST=nfd
      - NDN_ID=1
    labels:
      de.matthes.ndn_app: "ndn-link-quality-handler"

  # Management software for NDN
  management:
    image: ghcr.io/ndnappbachelorthesis/ndn-management:latest
    # Otherwise, incoming IPs are changed inside the container and no response can be sent
    network_mode: host
    ports:
      - "32200:32200/udp"
      - "3000:3000"
    environment:
      - HOST_IP=192.168.178.119
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=root
    volumes:
      - "management-db:/server/db"
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      de.matthes.ndn_app: "management"


volumes:
  grafana-storage: { }
  management-db: { }
